#!/bin/bash
# Hybra Finance Audit Analysis Script
# Analyzes all in-scope contracts from the Code4rena contest

echo "=== Hybra Finance Security Analysis ==="
echo "Starting analysis of in-scope contracts..."
echo ""

# Create output directory for results
RESULTS_DIR="audit_results/hybra_finance_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$RESULTS_DIR"

# Array of in-scope contracts
declare -a CONTRACTS=(
  "contests/hybra-finance/ve33/contracts/GaugeManager.sol"
  # "contests/hybra-finance/ve33/contracts/GaugeV2.sol"
  # "contests/hybra-finance/ve33/contracts/MinterUpgradeable.sol"
  # "contests/hybra-finance/ve33/contracts/VoterV3.sol"
  # "contests/hybra-finance/ve33/contracts/VotingEscrow.sol"
  # "contests/hybra-finance/ve33/contracts/GovernanceHYBR.sol"
  # "contests/hybra-finance/ve33/contracts/HYBR.sol"
  # "contests/hybra-finance/ve33/contracts/RewardHYBR.sol"
  # "contests/hybra-finance/ve33/contracts/swapper/HybrSwapper.sol"
  # "contests/hybra-finance/ve33/contracts/CLGauge/GaugeCL.sol"
  # "contests/hybra-finance/ve33/contracts/CLGauge/GaugeFactoryCL.sol"
  # "contests/hybra-finance/cl/contracts/core/CLFactory.sol"
  # "contests/hybra-finance/cl/contracts/core/CLPool.sol"
  # "contests/hybra-finance/cl/contracts/core/fees/DynamicSwapFeeModule.sol"
)

# Activate virtual environment
source .venv/bin/activate

# Counter for tracking progress
total=${#CONTRACTS[@]}
current=0

# Analyze each contract
for contract in "${CONTRACTS[@]}"; do
  current=$((current + 1))
  contract_name=$(basename "$contract" .sol)

  echo "[$current/$total] Analyzing: $contract_name"
  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

  # Run analysis with Gemini model, no RAG, export results
  .venv/bin/python main.py \
    --contract "$contract" \
    --all-models "models/gemini-1.5-flash" \
    --no-rag \
    --export-md \
    --export-json "$RESULTS_DIR/${contract_name}_results.json" \
    2>&1 | tee "$RESULTS_DIR/${contract_name}_log.txt"

  echo ""
  echo "✓ Completed analysis of $contract_name"
  echo ""
done

# Move generated markdown reports to results directory
mv analysis_report_*.md "$RESULTS_DIR/" 2>/dev/null || true

# Create summary report
echo "=== Generating Summary Report ==="
cat >"$RESULTS_DIR/SUMMARY.md" <<EOF
# Hybra Finance Security Analysis Summary

**Analysis Date:** $(date +"%Y-%m-%d %H:%M:%S")
**Model Used:** Gemini 1.5 Flash
**Total Contracts Analyzed:** $total

## Contracts Analyzed

EOF

for contract in "${CONTRACTS[@]}"; do
  contract_name=$(basename "$contract" .sol)
  echo "- $contract_name" >>"$RESULTS_DIR/SUMMARY.md"
done

cat >>"$RESULTS_DIR/SUMMARY.md" <<EOF

## Analysis Focus Areas

Based on the contest README, the analysis focused on:

### 1. CL Gauge System
- Reward distribution accuracy for deposited NFT positions
- Active liquidity range matching with emissions

### 2. ve(3,3) Epoch Cycle
- Reward distribution (Distribute) and rebase functionality
- Epoch rollover robustness and failure handling
- Cross-epoch reward claiming
- Lock duration extension and position merge impact on rewards

### 3. RewardHYBR
- Reward conversion (veHYBR, HYBR, gHYBR) execution reliability
- Asset loss prevention during claims

### 4. gHYBR Security
- Fund security vulnerabilities
- Deposit/withdrawal fund flow correctness
- veNFT operations (split, slice, merge) accounting

## Key Invariants Checked

- Token supply conservation
- Balance conservation
- Lock bounds and voting power decay
- Weight sum conservation
- Emission caps and proportionality
- Non-negative claimables
- Access control and privilege escalation

## Results

Individual contract analysis results are available in:
- JSON format: \`${contract_name}_results.json\`
- Markdown reports: \`analysis_report_${contract_name}_*.md\`
- Full logs: \`${contract_name}_log.txt\`

## Next Steps

1. Review individual contract findings
2. Prioritize high-confidence vulnerabilities
3. Validate findings with PoCs using the provided test suite
4. Cross-reference with known issues from previous audits
5. Focus on areas highlighted in contest README

---

*Generated by SmartGuard Vulnerability Analyzer*
EOF

echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✓ Analysis Complete!"
echo ""
echo "Results saved to: $RESULTS_DIR"
echo "Summary report: $RESULTS_DIR/SUMMARY.md"
echo ""
echo "To analyze the full ve33 directory structure:"
echo "  python main.py --contract contests/hybra-finance/ve33/contracts/ --all-models \"models/gemini-1.5-flash\" --no-rag"
echo ""
